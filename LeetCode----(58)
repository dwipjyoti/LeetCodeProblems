/* Question :- Length of Last Word of a String */

/* We can solve it by In-Built methods also shown in last */


class Solution {
    public int lengthOfLastWord(String s) {
        if(s.length()==0){
            return 0;
        }
        int count=0;
        int i=s.length()-1;
        
        /* "a    "    if these were he inputs
         * so we use while loop from backward and cancels all the blanck spaces until we get a Alphabet
         *  "    "    if these was input
         * so as we are using while loop then at last we get (i=-1) 
         * so we have to consider this and return 0 to the function
         */
         
        while((i>=0)&&(s.charAt(i)==' ')){//condition must be in sequence otherwise charAt(-1)---error
            i=i-1;
            
        }
        if(i==-1){
            return 0;
        }
        while(i>=0){
            if(s.charAt(i)==' '){
                break;
            }
            count++;
            i--;
        }
        return count;   
    }
}

/*    *****by In_Built Method split()*****     
public int lengthOfLastWord(String s){
    if(s.length==0){
        return 0;
    }
    String[] str=s.split(" ");//In_Built method split().......splits up the string on blanck space and return an array
    
    String last=str[str.length-1];//get the last word from the string array
    
    return last.length();//return length of the string/word
}
*/



/* ******trim()****** 
This method eliminates all the leading and trailing zeroes
"   a  b"  by trim() -----   "a  b"
"a b    "  by trim() -----   "a b"

Now traverse the string from back and when get space break and return the length

*/
